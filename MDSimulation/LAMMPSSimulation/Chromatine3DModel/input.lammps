#####################################################
#                                                   #
#                                                   #
# Filename: in.deform.polychain.txt                 #
# Author: Mark Tschopp, 2010                        #
#                                                   #
# The methodology outlined here follows that from   #
# Hossain, Tschopp, et al. 2010, Polymer.  Please   #
# cite accordingly. The following script requires   #
# a LAMMPS data file containing the coordinates and #
# appropriate bond/angle/dihedral lists for each    #
# united atom.                                      #
#                                                   #
# Execute the script through:                       #
# lmp_exe < in.deform.polychain.txt                 #
#                                                   #
#####################################################

# VARIABLES
variable fname index InitialFile.txt
variable simname index InitialFile


# Initialization
units		real
boundary	f f f
atom_style	molecular
log 		log.${simname}.txt
read_data	InitialFile.txt

# Dreiding potential information
neighbor	0.4 bin
neigh_modify	every 10 one 10000

bond_style      harmonic
bond_coeff	1 350 1.53
bond_coeff	2 700 1.53

angle_style     harmonic
angle_coeff	1 60 109.5
angle_coeff	2 120 109.5

dihedral_style	multi/harmonic
dihedral_coeff	1 1.73 -4.49 0.776 6.99 0.0
dihedral_coeff	2 1.73 -4.49 0.776 6.99 0.0

pair_style	lj/cut 10.5


pair_coeff	* * 1.0 1.0 10.5
pair_coeff	3 3 2.0 2.0 10.5

compute csym all centro/atom fcc
compute peratom all pe/atom



#####################################################
# Equilibration (Langevin dynamics at 300 K)

velocity 	all create 300.0 1231
fix		1 all nve/limit 0.05
fix		2 all langevin 300.0 300.0 10.0 904297
thermo_style	custom step temp 
thermo          10000
timestep	1
run		100000
unfix 1
unfix 2
write_restart 	restart.${simname}.dreiding1


#####################################################
# Define Settings
compute eng all pe/atom 
compute eatoms all reduce sum c_eng 

#####################################################
# Minimization

dump mydmp all atom 100 dump.lammpstrj

reset_timestep 0 
fix 1 all nvt temp 300.0 300.0 100.0
thermo 20 
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms 
min_style cg
minimize 1e-25 1e-25 500000 1000000 

# Get the equilibrium distance of the harmonic bond (type 1)
variable eq_dist equal 1.0  # Replace with the actual equilibrium distance

# Continue with your simulation steps
thermo_style custom step temp 
thermo 1000
timestep 1

# Run the simulation for a specified number of steps
variable num_steps equal 100000
label loop_start

# First reaction
fix react1 all bond/react k forward 1 2 1 ${eq_dist} react_region react_dist 2*${eq_dist}
run 1000

# Second reaction
unfix react1
fix react2 all bond/react k forward 2 3 2 ${eq_dist} react_region react_dist 2*${eq_dist}
run 1000

# Third reaction
unfix react2
fix react3 all bond/react k forward 3 2 3 ${eq_dist} react_region react_dist 2*${eq_dist}
run 1000

# Fourth reaction
unfix react3
fix react4 all bond/react k forward 2 1 2 ${eq_dist} react_region react_dist 2*${eq_dist}
run 1000

# Check if reactions occurred (you can adjust the condition based on your requirements)
variable reactions_occurred equal $fix_react1_react_count + $fix_react2_react_count + $fix_react3_react_count + $fix_react4_react_count > 0

# Reset the fix bond/react to clear the reaction count
unfix react4

# If reactions occurred, continue the loop
if ${reactions_occurred} then goto loop_start

# Print the current timestep
print "All done"

write_restart restart.${simname}.dreiding1